PandionJ Error Report

java.lang.NumberFormatException : For input string: "Index 3255 out of bounds for length 3000"

Exception trace: 

java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
java.base/java.lang.Integer.parseInt(Integer.java:660)
java.base/java.lang.Integer.<init>(Integer.java:1119)
pt.iscte.pandionj.figures.StackFrameFigure.<init>(StackFrameFigure.java:68)
pt.iscte.pandionj.figures.StackContainer.addFrame(StackContainer.java:23)
pt.iscte.pandionj.figures.ObjectFigure.<init>(ObjectFigure.java:129)
pt.iscte.pandionj.FigureProvider.createFigure(FigureProvider.java:105)
pt.iscte.pandionj.FigureProvider.getFigure(FigureProvider.java:49)
pt.iscte.pandionj.figures.ObjectContainer.addObject(ObjectContainer.java:56)
pt.iscte.pandionj.figures.ObjectContainer.addObjectAndPointer(ObjectContainer.java:42)
pt.iscte.pandionj.figures.ObjectFigure$FieldsContainer.addFields(ObjectFigure.java:210)
pt.iscte.pandionj.figures.ObjectFigure$FieldsContainer.<init>(ObjectFigure.java:170)
pt.iscte.pandionj.figures.ObjectFigure.<init>(ObjectFigure.java:119)
pt.iscte.pandionj.FigureProvider.createFigure(FigureProvider.java:105)
pt.iscte.pandionj.FigureProvider.getFigure(FigureProvider.java:49)
pt.iscte.pandionj.figures.ObjectContainer.addObject(ObjectContainer.java:56)
pt.iscte.pandionj.figures.ObjectContainer.addObjectAndPointer(ObjectContainer.java:42)
pt.iscte.pandionj.figures.StackFrameFigure.addVariable(StackFrameFigure.java:163)
pt.iscte.pandionj.figures.StackFrameFigure.<init>(StackFrameFigure.java:62)
pt.iscte.pandionj.figures.StackContainer.addFrame(StackContainer.java:23)
pt.iscte.pandionj.RuntimeViewer.lambda$1(RuntimeViewer.java:158)
pt.iscte.pandionj.PandionJView.executeInternal(PandionJView.java:327)
pt.iscte.pandionj.extensibility.PandionJUI.lambda$1(PandionJUI.java:136)
org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4029)
org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
org.eclipse.jface.window.Window.open(Window.java:799)
org.eclipse.jface.dialogs.MessageDialog.open(MessageDialog.java:394)
pt.iscte.pandionj.PandionJView.lambda$1(PandionJView.java:249)
pt.iscte.pandionj.PandionJView.executeInternal(PandionJView.java:327)
pt.iscte.pandionj.extensibility.PandionJUI.lambda$1(PandionJUI.java:136)
org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4029)
org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1041)
org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.base/java.lang.reflect.Method.invoke(Method.java:567)
org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Error code: -1727436074

User code: 

/**
 * Represents color images.
 * Image data is represented as a matrix:
 * - the number of lines corresponds to the image height (data.length)
 * - the length of the lines corresponds to the image width (data[*].length)
 * - pixel color is encoded as integers (ARGB)
 */
class ColorImage {

	 int[][] data; // @colorimage

	ColorImage(String file) {
		this.data = ImageUtil.readColorImage(file);
	}

	ColorImage(int width, int height) {
		data = new int[height][width];
	}

	int getWidth() {
		return data[0].length;
	}

	int getHeight() {
		return data.length;
	}

	void setColor(int x, int y, Color c) {
>>>>		data[y][x] = ImageUtil.encodeRgb(c.getR(), c.getG(), c.getB());
	}

	Color getColor(int x, int y) {
		int[] rgb = ImageUtil.decodeRgb(data[y][x]);
		return new Color(rgb[0], rgb[1], rgb[2]);
	}
	
	void invert(){
		for (int i = 0 ; i != this.getWidth() ; i++){
			for (int j = 0 ; j != this.getHeight() ; j++){
				this.setColor(i,j, this.getColor(i,j).invert());
			}
		}
	}
	void brighter(int x){
		for (int i = 0 ; i != this.getWidth() ; i++){
			for (int j = 0 ; j != this.getHeight() ; j++){
				this.setColor(i,j, this.getColor(i,j).brighter(x));
			}
		}
	}
	
	void swap(int i1,int j1, int i2, int j2){
		int temp = data[i1][j1];
		data[i1][j1] = data[i2][j2];
		data[i2][j2] = temp;
	}
	void mirror(){
		for (int i = 0 ; i != this.getHeight() ; i++){
			for (int j = 0 ; j != this.getWidth()/2; j++){
				swap(i,j,i, this.getWidth() -1 -j);
			}
		}
	}
	
	void merge(ColorImage lay, int x, int y){
		int l = lay.getWidth() > this.getWidth() -x ? this.getWidth() -x : lay.getWidth();
		int r = lay.getHeight() > this.getHeight() -y ?this.getHeight() -y :  lay.getHeight() ;
		for (int i = 0 ; i != l  ; i++){
			for (int j = 0 ; j != r; j++){
				this.setColor(i+x,j+y, lay.getColor(i,j));
			}
		}
		
	}
	
	ColorImage pb(){
		ColorImage c = new ColorImage(this.getWidth(), this.getHeight());
		for (int i = 0 ; i != this.getWidth(); i++){
			for (int j = 0 ; j != this.getHeight(); j++){
				if(this.getColor(i,j).getLuminance() < 128){
					c.setColor(i,j,Color.black);
				}else{
					c.setColor(i,j,Color.white);
				}
			}
		}
		return c;
	}
	
	ColorImage copy(){
		ColorImage c = new ColorImage(this.getWidth(), this.getHeight());
		for (int i = 0 ; i != this.getWidth(); i++){
			for (int j = 0 ; j != this.getHeight(); j++){
					c.setColor(i,j,this.getColor(i,j));
			}
		}
		return c;
	}
	
	ColorImage cut(int xstr, int ystr, int xend, int yend){
		ColorImage c = new ColorImage(xend-xstr, yend-ystr);
		for (int i = xstr ; i != xend; i++){
			for (int j = ystr ; j != yend; j++){
					c.setColor(i-xstr,j-ystr,this.getColor(i,j));
			}
		}
		return c;
	}
	
	
}


Call stack:

saveInverted()
draw()
layer(original, lay, 5, 3255)
setColor(5, 3255, c)

